from __future__ import division
import re
import pdb
from os import sys, path
sys.path.append(path.dirname(path.dirname(path.abspath(__file__))))

__author__ = "Jianfeng Chen"
__copyright__ = "Copyright (C) 2016 Jianfeng Chen"
__license__ = "MIT"
__version__ = "1.0"
__email__ = "jchen37@ncsu.edu"


"""
Operations for the decision trees generated by the scikit-learn tool
parser: parse *.dot file into tree structure
prune:
"""


def parse_cart(dotfile):
    records = []
    with open(dotfile, 'r') as f:
        for record in f:
            records.append(record[:-1])

    connection_pattern = re.compile(r'(\d+) -> (\d+) .*;')
    non_leaf_vertex_pattern = re.compile(r'(\d+) '  # group 1 vertex index
                                         r'\[label=\"X\[(\d+)\]'  # group 2 X?
                                         r' ([<>=]+) '  # group 3 operator
                                         r'([-]?\d+\.\d+)'  # group 4 right of operator
                                         r'\\nmse = '
                                         r'([-]?\d+\.\d+)'  # group 5 mse
                                         r'\\nsamples = '
                                         r'(\d+)'  # group 6 samples
                                         r'\\nvalue = '
                                         r'([-]?\d+\.\d+)'  # group 7 value
                                         r'.*')

    leaf_vertex_pattern = re.compile(r'(\d+) '  # group 1 vertex index
                                     r'\[label=\"mse = '
                                     r'([-]?\d+\.\d+)'  # group 2 mse
                                     r'\\nsamples = '
                                     r'(\d+)'  # group 3 samples
                                     r'\\nvalue = '
                                     r'([-]?\d+\.\d+)'  # group 4 value
                                     r'.*')

    for record in records:
        mm = connection_pattern.match(record)
        if mm:
            pass
            #print 'connection', int(mm.group(1)), int(mm.group(2))

        mm = non_leaf_vertex_pattern.match(record)
        if mm:
            pass
            # print record

        mm = leaf_vertex_pattern.match(record)
        if mm:
            print record
            pdb.set_trace()



    print dotfile


if __name__ == '__main__':
    name = 'simple'
    spl_addr = [i for i in sys.path if i.endswith('SPL')][0]
    dotfile = spl_addr + '/Surrogate/' + name + '.dot'
    parse_cart(dotfile)
